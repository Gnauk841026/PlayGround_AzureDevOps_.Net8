# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger: none

pr:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: SonarQubePrepare@7
  inputs:
    SonarQube: 'Sonarqube Server'
    scannerMode: 'dotnet'
    projectKey: 'PlayGround-AzureDevOps_PlayGround_AzureDevOps_.Net.git_bcfce20d-c6ca-4086-a9b0-dbd39042d864'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    azureSubscription: 'Visual Studio Enterprise 訂閱 – MPN(0cbc3466-ab56-4e0d-b53c-4566e585974c)'
    command: 'restore'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    azureSubscription: 'Visual Studio Enterprise 訂閱 – MPN(0cbc3466-ab56-4e0d-b53c-4566e585974c)'
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Run
  inputs:
    azureSubscription: 'Visual Studio Enterprise 訂閱 – MPN(0cbc3466-ab56-4e0d-b53c-4566e585974c)'
    command: 'run'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    azureSubscription: 'Visual Studio Enterprise 訂閱 – MPN(0cbc3466-ab56-4e0d-b53c-4566e585974c)'
    command: 'test'
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--collect "Code coverage"'

- task: SonarQubeAnalyze@7
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarQubePublish@7
  inputs:
    pollingTimeoutSec: '300'
    
- task: DotNetCoreCLI@2
  displayName: Packing
  inputs:
    azureSubscription: 'Visual Studio Enterprise 訂閱 – MPN(0cbc3466-ab56-4e0d-b53c-4566e585974c)'
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'off'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    azureSubscription: 'Visual Studio Enterprise 訂閱 – MPN(0cbc3466-ab56-4e0d-b53c-4566e585974c)'
    command: 'publish'
    publishWebProjects: true
    arguments: '--output $(build.artifactstagingdirectory)'

- task: S3Upload@1
  inputs:
    awsCredentials: 'AWS S3'
    regionName: 'ap-northeast-1'
    bucketName: 'demo-bucket-20240930'
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    globExpressions: '**/*.zip'